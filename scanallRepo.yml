trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: GitleaksScan
  displayName: 'Run Gitleaks Scan for Repositories'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: |
      # Read the CSV file and iterate over each line
      while IFS=',' read -r projectName repoName; do
        if [[ "$projectName" != "Project Name" ]]; then  # Skip header
          echo "##vso[task.setvariable variable=currentProjectName]$projectName"
          echo "##vso[task.setvariable variable=currentRepoName]$repoName"
          
          # Call the Gitleaks template with parameters
          echo "Calling Gitleaks template for $repoName"
          
          # Call the template for each repository
          echo "##vso[task.setvariable variable=projectName]$projectName"
          echo "##vso[task.setvariable variable=repoName]$repoName"
          
        fi
      done < $(Build.SourcesDirectory)/project_and_repositories.csv
    displayName: 'Read CSV and Set Variables for Repositories'
  
  # Call the Gitleaks template for each repo
  - ${{ each repo in parameters.repos }}:
    - template: path/to/gitleaks_template.yaml
      parameters:
        projectName: $(currentProjectName)
        repoName: $(currentRepoName)
