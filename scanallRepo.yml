trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:

# Step 1: Use PowerShell to read the CSV and loop through each row
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Import the CSV from the source directory
      $csv = Import-Csv "$(Build.SourcesDirectory)/repos.csv"

      # Loop through each row in CSV
      foreach ($row in $csv) {
          # Set the ProjectName and RepoName variables for each row
          Write-Host "##vso[task.setvariable variable=ProjectName]$($row.ProjectName)"
          Write-Host "##vso[task.setvariable variable=RepoName]$($row.RepoName)"
          
          # Trigger a pipeline task for each repository by invoking a new script or template
          Invoke-Expression '##vso[task.logissue type=info]Processing $($row.ProjectName) - $($row.RepoName)'
          
          # Invoke the next pipeline task to process the repository
          # You could trigger a command to invoke the YAML template or other build steps here.
          Write-Host "Calling template for ProjectName: $($row.ProjectName), RepoName: $($row.RepoName)"
          
          # Call the next template step or script by using the pipeline mechanism
          Start-Sleep -Seconds 1
      }

# Step 2: Call the template with the current values set in the loop
- template: my-template.yaml
  parameters:
    projectName: $(ProjectName)
    repoName: $(RepoName)
