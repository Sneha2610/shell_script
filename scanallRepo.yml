trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  GITLEAKS_TEMPLATE: 'path/to/your/gitleaks_template.yaml'  # Path to your Gitleaks scan template

jobs:
- job: GitleaksScan
  displayName: 'Run Gitleaks Scan for Repositories'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - powershell: |
      # Read the CSV file and iterate over each line
      $csvPath = "$(Build.SourcesDirectory)\project_and_repositories.csv"
      $csvContent = Import-Csv -Path $csvPath

      foreach ($row in $csvContent) {
        $projectName = $row.'Project Name'
        $repoName = $row.'Repository Name'

        if ($projectName -ne "Project Name") {  # Skip header
          Write-Host "Scanning project: $projectName, repository: $repoName"
          
          # Here, you can call the Gitleaks template directly
          # Assuming you have the Gitleaks template logic included in this pipeline
          .\path\to\gitleaks_template.ps1 -projectName $projectName -repoName $repoName
        }
      }
    displayName: 'Read CSV and Run Gitleaks Scan'
